@model Model.EF.FARM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Farmer/Views/Shared/_Layouts.cshtml";
}

<head>
    <title>Edit Farm</title>
</head>

<!-- Start Reservation section -->
<section id="mu-reservation">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="mu-reservation-area">
                            <div class="mu-title">
                                <span class="mu-subtitle">Nông Trại</span>
                                <h2>CHỈNH SỬA THÔNG TIN</h2>
                                <i style="margin-right: -9px" class="fas fa-tractor"></i>
                                <span class="mu-title-bar"></span>
                            </div>
                            @using (Html.BeginForm())
                            {
                                <div class="mu-reservation-content">
                                    <form class="mu-reservation-form">
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger", @role = "alert", @style = "text-align: center" })
                                        <div class="row">

                                            @Html.HiddenFor(model => model.Id_Farm)

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="hidden" name="Id_Farmer" value="@Model.Id_Farmer">
                                                    <input type="text" class="form-control" title="Tên Chủ Nông Trại" value="@Model.FARMER.Name_Farmer" disabled />
                                                    @Html.ValidationMessageFor(model => model.FARMER.Name_Farmer, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="text" class="form-control checkNameFarm" title="Tên Nông Trại" name="Name_Farm" value="@Model.Name_Farm" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')">
                                                    @Html.ValidationMessageFor(model => model.Name_Farm, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="text" class="form-control checkAddressFarm" title="Địa Chỉ Nông Trại" name="Address_Farm" value="@Model.Address_Farm" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')">
                                                    @Html.ValidationMessageFor(model => model.Address_Farm, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="number" class="form-control limitSeven" title="Diện Tích Nông Trại" name="Acreage" value="@Model.Acreage" onkeypress='return event.charCode != 69 && event.charCode != 101 && event.charCode != 45 && event.charCode != 43 && event.charCode != 46' required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')">
                                                    @Html.ValidationMessageFor(model => model.Acreage, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="text" class="form-control checkCityFarm" title="Thành Phố" name="City_Farm" value="@Model.City_Farm" required="" oninvalid="this.setCustomValidity('Thông tin này không được để trống')" oninput="this.setCustomValidity('')">
                                                    @Html.ValidationMessageFor(model => model.City_Farm, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <h4><span class="label label-success">Nông Trại Đang Hoạt Động</span></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <textarea class="form-control limitTwoHundred" cols="30" rows="10" title="Mô tả" name="Description_Farm" value="@Model.Description_Farm">@Model.Description_Farm</textarea>
                                                    @Html.ValidationMessageFor(model => model.Description_Farm, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </div>

                                        <center>
                                            <button type="submit" class="mu-readmore-btn">Cập Nhật</button>

                                            <button type="button" onclick="location.href = '@Url.Action("Index","Farm", new { id = Model.FARMER.Id_Farmer })'" class="mu-readmore-btn">Quay Về</button>
                                        </center>

                                    </form>
                                </div>

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Reservation section -->

<script>

    function keyispressed(e) {
        var charval = String.fromCharCode(e.keyCode);
        var charE = "e";
        if (isNaN(charval)) {
            return false;
        }
        else if (isNaN(charE)) {
            return false;
        }
        return true;
    }

    $(document).ready(function () {
        var elem = $(".limitSeven");
        if (elem) {
            elem.keydown(function () {
                if (elem.val().length > 7)
                    elem.val(elem.val().substr(0, 7));
            });
        }
    });

    $(document).ready(function () {
        var elem = $(".checkNameFarm");
        if (elem) {
            elem.keydown(function () {
                if (elem.val().length > 20)
                    elem.val(elem.val().substr(0, 20));
            });
        }
    });

    $(document).ready(function () {
        var elem = $(".checkAddressFarm");
        if (elem) {
            elem.keydown(function () {
                if (elem.val().length > 20)
                    elem.val(elem.val().substr(0, 20));
            });
        }
    });

    $(document).ready(function () {
        var elem = $(".checkCityFarm");
        if (elem) {
            elem.keydown(function () {
                if (elem.val().length > 20)
                    elem.val(elem.val().substr(0, 20));
            });
        }
    });

    $(document).ready(function () {
        var elem = $(".limitTwoHundred");
        if (elem) {
            elem.keydown(function () {
                if (elem.val().length > 190)
                    elem.val(elem.val().substr(0, 190));
            });
        }
    });

</script>
